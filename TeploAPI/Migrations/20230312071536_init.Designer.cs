// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeploAPI.Data;

#nullable disable

namespace TeploAPI.Migrations
{
    [DbContext(typeof(TeploDBContext))]
    [Migration("20230312071536_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TeploAPI.Models.Furnace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AcceptedTemperatureOfBackupZone")
                        .HasColumnType("double precision");

                    b.Property<double>("AshContentInCoke")
                        .HasColumnType("double precision");

                    b.Property<double>("AverageSizeOfPieceCharge")
                        .HasColumnType("double precision");

                    b.Property<double>("BlastConsumption")
                        .HasColumnType("double precision");

                    b.Property<double>("BlastHumidity")
                        .HasColumnType("double precision");

                    b.Property<double>("BlastPressure")
                        .HasColumnType("double precision");

                    b.Property<double>("BlastTemperature")
                        .HasColumnType("double precision");

                    b.Property<double>("Chugun_C")
                        .HasColumnType("double precision");

                    b.Property<double>("Chugun_MN")
                        .HasColumnType("double precision");

                    b.Property<double>("Chugun_P")
                        .HasColumnType("double precision");

                    b.Property<double>("Chugun_S")
                        .HasColumnType("double precision");

                    b.Property<double>("Chugun_SI")
                        .HasColumnType("double precision");

                    b.Property<double>("ColoshGasPressure")
                        .HasColumnType("double precision");

                    b.Property<double>("ColoshGasTemperature")
                        .HasColumnType("double precision");

                    b.Property<double>("ColoshGas_CO")
                        .HasColumnType("double precision");

                    b.Property<double>("ColoshGas_CO2")
                        .HasColumnType("double precision");

                    b.Property<double>("ColoshGas_H2")
                        .HasColumnType("double precision");

                    b.Property<double>("DailyСapacityOfFurnace")
                        .HasColumnType("double precision");

                    b.Property<double>("DiameterOfColoshnik")
                        .HasColumnType("double precision");

                    b.Property<double>("DiameterOfHorn")
                        .HasColumnType("double precision");

                    b.Property<double>("DiameterOfRaspar")
                        .HasColumnType("double precision");

                    b.Property<double>("EstablishedLevelOfEmbankment")
                        .HasColumnType("double precision");

                    b.Property<double>("HeatCapacityOfAgglomerate")
                        .HasColumnType("double precision");

                    b.Property<double>("HeatCapacityOfCoke")
                        .HasColumnType("double precision");

                    b.Property<double>("HeatCapacityOfPellets")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfColoshnik")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfHorn")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfRaspar")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfShaft")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfTuyeres")
                        .HasColumnType("double precision");

                    b.Property<double>("HeightOfZaplechiks")
                        .HasColumnType("double precision");

                    b.Property<double>("NaturalGasConsumption")
                        .HasColumnType("double precision");

                    b.Property<double>("NumberOfFurnace")
                        .HasColumnType("double precision");

                    b.Property<double>("NumberOfTuyeres")
                        .HasColumnType("double precision");

                    b.Property<double>("OxygenContentInBlast")
                        .HasColumnType("double precision");

                    b.Property<double>("ProportionOfHeatLossesOfLowerPart")
                        .HasColumnType("double precision");

                    b.Property<double>("ShareOfPelletsInCharge")
                        .HasColumnType("double precision");

                    b.Property<double>("SpecificConsumptionOfCoke")
                        .HasColumnType("double precision");

                    b.Property<double>("SpecificConsumptionOfZRM")
                        .HasColumnType("double precision");

                    b.Property<double>("SpecificSlagYield")
                        .HasColumnType("double precision");

                    b.Property<double>("SulfurContentInCoke")
                        .HasColumnType("double precision");

                    b.Property<double>("UsefulHeightOfFurnace")
                        .HasColumnType("double precision");

                    b.Property<double>("UsefulVolumeOfFurnace")
                        .HasColumnType("double precision");

                    b.Property<double>("VolatileContentInCoke")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Furnaces");
                });
#pragma warning restore 612, 618
        }
    }
}
